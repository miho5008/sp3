@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}
@{
    WebSecurity.RequireAuthenticatedUser();
    if(!Roles.GetRolesForUser(WebSecurity.CurrentUserId.ToString()).Contains("company")){
        Response.Redirect("~/");
    }
    WebSecurity.RequireRoles("company");

    Layout = "~/_SiteLayout.cshtml";
    Page.Title = "Company";

    String searchval = Request["search_val"];
    String regex_validsearch = "[0-9]+";
 
}

<h1>company</h1>
<div id="searchfield">
    @{
        // Setup validation
        Validation.RequireField("search_val", "You must specify a search value.");
        Validation.Add("search_val",
            Validator.Regex("[0-9]+",
            errorMessage: "Input must be integers"));
   
    }
    <form method="post">
        <label for="search_val" @if (!ModelState.IsValidField("search_val")) 
            {<text>class="error-label"</text>}>search employee number</label>
        <input type="text" id="search_val" 
            name="search_val" value="@searchval" 
            @Validation.For("search_val") />
        
        <input type="submit" value="search" />
        @Html.ValidationMessage("search_val")
    </form>

</div>

<div id="search_result">
    @{
       // if valid search request was made
        if(Request["search_val"] != "" ){ 
            searchval = Request["search_val"];

            if(searchval != null
                && System.Text.RegularExpressions.Regex.IsMatch(searchval, regex_validsearch)){
                try{
                    var db = Database.Open("sp3");
                    //get the requested employee
                    var employee = db.QuerySingle(
                        "SELECT * "
                        +" FROM userinfo AS ui"
                        +" WHERE ui.userid=(@0)",
                        searchval);
                    if(employee == null){
                        throw new NullReferenceException("could not find user "+searchval);
                    }
                    // get the employees register rows
                    var data = db.Query(
                        "SELECT a.name, reg.ipaddress,"
                        +"   reg.time, reg.stoptime, reg.childpnr"
                        +" FROM registrations AS reg"
                        +" JOIN actions AS a"
                        +"  ON reg.action=a.id"
                        +" WHERE reg.userid=(@0)"
                        +" ORDER BY reg.time DESC",
                        searchval
                    );

                    var grid = new WebGrid(data);

                    // display the result
                    <h3>displaying result for [@employee.lastname, @employee.firstname]</h3>
                    if(grid.TotalRowCount > 0){
                        @grid.GetHtml();    
                    } else {
                        <p>no entries found</p>
                    }
                } catch(FormatException e){
                    <p class="error">@e.Message</p>
                } catch(NullReferenceException e){
                    <p class="error">@e.Message</p>
                }
            }
        }
    }
</div>

